group 'org.intentor.yabai'
version '0.4-SNAPSHOT'

repositories {
    mavenCentral()
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    checkstyle {
        ignoreFailures = true
        showViolations = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task link() {
    group 'build'
    description 'Link the binary and create a signature file.'
    dependsOn build

    doLast {
        ant.java(classname: 'lejos.pc.tools.NXJLink', failonerror: true) {
            classpath {
                fileset(dir: nxjhome + '/lib/pc', includes: '**/*.jar')
                fileset(dir: nxjhome + '/lib/nxt', includes: '**/*.jar')
            }
            arg(value: '--bootclasspath')
            arg(path: nxjhome + '/lib/nxt')
            arg(value: '--classpath')
            arg(path: buildDir.toString() + '/classes')
            arg(value: '--writeorder')
            arg(value: 'LE')
            arg(value: '-o')
            arg(file: buildDir.toString() + '/' + project.name + '.nxj')
            arg(value: '-od')
            arg(file: buildDir.toString() + '/' + project.name + '.nxd')
            arg(value: '-v')
            arg(value: 'org.intentor.yabai.Main')
        }
    }
}

task upload() {
    description 'Uploads the program to a NXT brick.'
    dependsOn link

    doLast {
        ant.java(classname: 'lejos.pc.tools.NXJUpload', fork: true, failonerror: true) {
            classpath {
                fileset(dir: nxjhome + '/lib/pc', includes: '**/*.jar')
            }
            sysproperty(key: 'nxj.home', file: nxjhome)
            jvmarg(value: '-d32')
            arg(value: buildDir.toString() + '/' + project.name + '.nxj')
        }
    }
}
