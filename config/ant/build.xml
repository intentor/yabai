<project name="org.intentor.yabai">
	<description>
    	Yab AI build file
    </description>

	<!-- Set properties for this build. -->
	<property environment="env" />
	<property file="build.properties" />

	<!-- Check whether nxj.home is correct. -->
	<available file="${nxj.home}/lib/pc" property="lejos.pc.exists" />
	<available file="${nxj.home}/lib/nxt" property="lejos.nxt.exists" />
	<fail unless="lejos.pc.exists" message="nxj.home variable incorrect, ${nxj.home}/lib/pc does not exist" />
	<fail unless="lejos.nxt.exists" message="nxj.home variable incorrect, ${nxj.home}/lib/nxt does not exist" />

	<path id="lejos.pc">
		<fileset dir="${nxj.home}/lib/pc">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="lejos.nxt">
		<fileset dir="${nxj.home}/lib/nxt">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<condition property="d32Flag" value="-d32" else="-Dblank.dummy.arg=">
		<and>
			<os family="mac" />
		</and>
	</condition>

	<target name="clean" description="Clean up all generated files.">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile" depends="clean" description="Compile the source code.">
		<mkdir dir="${classes.dir}" />
		<javac
			srcdir="${source.dir}"
			includes="${source.include}"
			encoding="${source.encoding}"
			source="${source.version}"
			target="${target.version}"
			destdir="${classes.dir}"
			debug="true"
			includeAntRuntime="false"
			includeJavaRuntime="false"
			verbose="false">
			<bootclasspath refid="lejos.nxt" />
			<!-- enable warnings -->
			<compilerarg value="-Xlint:${source.warn}" />
			<!--
				Without this, there are some JDK jars in the classpath.
				Set verbose=true to check that the classpath is really clean.
			-->
    		<compilerarg value="-extdirs" />
    		<compilerarg value="" />
		</javac>
	</target>

	<target name="link" depends="compile" description="Link the binary and create a signature file.">
		<java classname="lejos.pc.tools.NXJLink" failonerror="true">
			<classpath refid="lejos.pc" />
			<arg value="--bootclasspath" />
			<arg pathref="lejos.nxt" />
			<arg value="--classpath" />
			<arg path="${classes.dir}" />
			<arg value="--writeorder" />
			<arg value="LE" />
			<arg value="-o" />
			<arg file="${output.nxj}" />
			<arg value="-od" />
			<arg file="${output.nxd}" />
			<arg value="-v" />
			<arg value="${main.class}" />
		</java>
	</target>
	
	<target name="debugLink" depends="compile" description="Link the binary and create a signature file for debug mode.">
		<java classname="lejos.pc.tools.NXJLink" failonerror="true">
			<classpath refid="lejos.pc" />
			<arg value="--bootclasspath" />
			<arg pathref="lejos.nxt" />
			<arg value="--classpath" />
			<arg path="${classes.dir}" />
			<arg value="--writeorder" />
			<arg value="LE" />
			<arg value="-o" />
			<arg file="${output.nxj}" />
			<arg value="-od" />
			<arg file="${output.nxd}" />
			<arg value="-gr" />
			<arg value="-v" />
			<arg value="${main.class}" />
		</java>
	</target>
	
	<target name="upload" depends="link" description="Upload the binary to the NXT brick.">
		<java classname="lejos.pc.tools.NXJUpload" fork="true" failonerror="true">
			<sysproperty key="nxj.home" file="${nxj.home}"/>
			<jvmarg value="${d32Flag}" />
			<classpath refid="lejos.pc" />
			<arg value="${output.nxj}" />
		</java>
	</target>
	
	<target name="uploadAndRun" depends="link" description="Upload and run the binary.">
		<java classname="lejos.pc.tools.NXJUpload" fork="true" failonerror="true">
			<sysproperty key="nxj.home" file="${nxj.home}"/>
			<jvmarg value="${d32Flag}" />
			<classpath refid="lejos.pc" />
			<arg value="-r" />
			<arg file="${output.nxj}" />
		</java>
	</target>
	
	<target name="debugUploadAndRun" depends="debugLink" description="Upload and run the binary in debug mode.">
		<java classname="lejos.pc.tools.NXJUpload" fork="true" failonerror="true">
			<sysproperty key="nxj.home" file="${nxj.home}"/>
			<jvmarg value="${d32Flag}" />
			<classpath refid="lejos.pc" />
			<arg value="-r" />
			<arg file="${output.nxj}" />
		</java>
	</target>
	
	<target name="console" depends="debugUploadAndRun" description="Run the debug console.">
		<sleep seconds="4" />
		<java classname="lejos.pc.tools.NXJConsole" fork="true" failonerror="true">
			<sysproperty key="nxj.home" file="${nxj.home}"/>
			<jvmarg value="${d32Flag}" />
			<classpath refid="lejos.pc" />
			<arg value="-di" />
			<arg file="${output.nxj}" />
		</java>
	</target>
	
	<target name="consoleViewer" depends="debugUploadAndRun" description="Run the GUI Console Viewer.">
		<sleep seconds="4" />
		<java classname="lejos.pc.tools.NXJConsoleViewer" fork="true" failonerror="true">
			<sysproperty key="nxj.home" file="${nxj.home}"/>
			<jvmarg value="${d32Flag}" />
			<classpath refid="lejos.pc" />
			<arg value="-di" />
			<arg file="${output.nxd}" />
		</java>
	</target>
	
	<target name="debugtool" description="Run the debug tool.">
		  <input
		    message="Exception class:"
		    addproperty="class" />
		  <input
		    message="Method number:"
		    addproperty="method" />
		  <input
		    message="PC value:"
		    addproperty="pc" />
		<java classname="lejos.pc.tools.NXJDebugTool" fork="true" failonerror="true">
			<sysproperty key="nxj.home" file="${nxj.home}"/>
			<classpath refid="lejos.pc" />
			<arg value="-di" />
			<arg file="${output.nxd}" />
			<arg value="-c" />
			<arg value="-m" />
			<arg value="${class}" />
			<arg value="${method}" />
			<arg value="${pc}" />
		</java>
	</target>
</project>